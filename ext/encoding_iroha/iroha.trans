<% # copied from enc/trans/single_byte.trans %>

#include "transcode_data.h"

<%
  # Generate transcoding tables for single byte encoding from
  # encoding name using table file.
  #
  # Conventions:
  #   name: encoding name as string, UPPER case, hyphens (e.g. 'ISO-8859-3')
  #   file name: lower case, hyphens, -tbl.rb suffix (e.g. iso-8859-3-tbl.rb)
  #   variable name: UPPER case, underscores, _TO_UCS_TBL suffix (e.g. ISO_8859_3_TO_UCS_TBL)
  # If the name starts with "ISO-8859", the C1 control code area is added automatically.
  def transcode_tblgen_singlebyte(name)
    require(name.downcase + "-tbl")
    control1_if_needed = (name =~ /^ISO-8859/) ? CONTROL1_TO_UCS_TBL : []
    tbl_to_ucs = control1_if_needed + eval(name.gsub(/-/, '_') + "_TO_UCS_TBL")
    transcode_tblgen(name, "UTF-8", [["{00-7f}", :nomap], *tbl_to_ucs.reject {|a, b| a.length != 2 }], '{00-ff}')
    transcode_tblgen("UTF-8", name, [["{00-7f}", :nomap], *tbl_to_ucs.map {|a,b| [b,a] }])
  end

  transcode_tblgen_singlebyte "IROHA"
%>

<%= transcode_generated_code %>

TRANS_INIT(single_byte)
{
<%= transcode_register_code %>
}

